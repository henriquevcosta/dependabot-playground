name: "Security check"

on:
  workflow_dispatch:
    inputs:
      ignore-crowdstrike:
        description: "⚠️ Ignore Crowdstrike vulnerability alerts"
        default: false
        type: boolean
        required: false
      
#  push:
#    branches: [ main ]
#  pull_request:
  # can add push and pull_request here 
env:
  CROWDSTRIKE_SCORE: ${{ github.event.inputs.ignore-crowdstrike && 9999 || 2000 }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

              # Gradle build

      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "19"
          distribution: "temurin"
          cache: "gradle"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: The conditional step
        if: ${{ !github.event.inputs.ignore-crowdstrike }}
        run: echo "Ignore was false!"


      - name: Running crowdstrike
        run: 'echo "This is the value: $CROWDSTRIKE_SCORE and ${{ env.CROWDSTRIKE_SCORE}}"'
      
        # Generate gradle lockfile for syft/trivy to parse
      - name: Run gradlew task to generate the lockfile
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: .
          arguments: dependencies --write-locks


      #     # See https://github.com/marketplace/actions/anchore-sbom-action
      # - name: Run syft to generate the SBOM
      #   uses: anchore/sbom-action@v0
      #   with:
      #     path: .
      #     output-file: "./sbom-build.spdx.json"
      #     upload-artifact: true
      #     upload-artifact-retention: 30
         
      ############################### Trivy Automatic submission to Dependency Submission API ################
      ##### Notes: doesn't seem to be working well, at least dependency review isn't picking up differences
      # Use Trivy to generate the SBOM (syft's package names weren't correct)
      # NOTE: this is using trivy ONLY for the SBOM, we could do the whole thing and generate a SARIF file and upload that
      #  https://github.com/aquasecurity/trivy-action
      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     scan-type: 'fs'
      #     format: 'github'
      #     output: 'dependency-results.sbom.json'
      #     image-ref: '.'
      #     github-pat: ${{ secrets.GITHUB_TOKEN }}
      
      ############################### Trivy explicit SBOM generation and submission ################
      #####
      - name: Run Trivy to produce SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'spdx-json'
          output: 'dependency-results.sbom.json'
          # image-ref: '.'
     

      - name: SBOM upload 
        uses: advanced-security/spdx-dependency-submission-action@v0.0.1
        with:
          filePath: "."
          filePattern: "dependency-results.sbom.json"

      ############################### Call on dependency review to get the diff from main ################
      ###### Get GitHub to analyse the diff in dependencies
      - name: 'Dependency Review'
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: actions/dependency-review-action@v3

      ############################### Save the SBOM to the build for manual analysis ################
      ######
      - uses: actions/upload-artifact@v3
        with:
          name: SBOM
          path: "dependency-results.sbom.json"


      ############################### Vulnerability scanning ################
      ###### Different kind of scope, this is related to using vuln scanning outside of dependabot (can scan container images)
      - name: Run Trivy vulnerability scanner to generate a SARIF
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          # ignore-unfixed: true
          output: 'trivy-results-fs.sarif'
          format: 'sarif'
          # severity: 'CRITICAL,HIGH'
 
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-fs.sarif'

